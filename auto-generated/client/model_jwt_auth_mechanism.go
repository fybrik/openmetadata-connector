/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JWTAuthMechanism struct for JWTAuthMechanism
type JWTAuthMechanism struct {
	JWTToken          string `json:"JWTToken"`
	JWTTokenExpiresAt *int64 `json:"JWTTokenExpiresAt,omitempty"`
	JWTTokenExpiry    string `json:"JWTTokenExpiry"`
}

// NewJWTAuthMechanism instantiates a new JWTAuthMechanism object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJWTAuthMechanism(jWTToken string, jWTTokenExpiry string) *JWTAuthMechanism {
	this := JWTAuthMechanism{}
	this.JWTToken = jWTToken
	this.JWTTokenExpiry = jWTTokenExpiry
	return &this
}

// NewJWTAuthMechanismWithDefaults instantiates a new JWTAuthMechanism object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJWTAuthMechanismWithDefaults() *JWTAuthMechanism {
	this := JWTAuthMechanism{}
	return &this
}

// GetJWTToken returns the JWTToken field value
func (o *JWTAuthMechanism) GetJWTToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JWTToken
}

// GetJWTTokenOk returns a tuple with the JWTToken field value
// and a boolean to check if the value has been set.
func (o *JWTAuthMechanism) GetJWTTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JWTToken, true
}

// SetJWTToken sets field value
func (o *JWTAuthMechanism) SetJWTToken(v string) {
	o.JWTToken = v
}

// GetJWTTokenExpiresAt returns the JWTTokenExpiresAt field value if set, zero value otherwise.
func (o *JWTAuthMechanism) GetJWTTokenExpiresAt() int64 {
	if o == nil || o.JWTTokenExpiresAt == nil {
		var ret int64
		return ret
	}
	return *o.JWTTokenExpiresAt
}

// GetJWTTokenExpiresAtOk returns a tuple with the JWTTokenExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JWTAuthMechanism) GetJWTTokenExpiresAtOk() (*int64, bool) {
	if o == nil || o.JWTTokenExpiresAt == nil {
		return nil, false
	}
	return o.JWTTokenExpiresAt, true
}

// HasJWTTokenExpiresAt returns a boolean if a field has been set.
func (o *JWTAuthMechanism) HasJWTTokenExpiresAt() bool {
	if o != nil && o.JWTTokenExpiresAt != nil {
		return true
	}

	return false
}

// SetJWTTokenExpiresAt gets a reference to the given int64 and assigns it to the JWTTokenExpiresAt field.
func (o *JWTAuthMechanism) SetJWTTokenExpiresAt(v int64) {
	o.JWTTokenExpiresAt = &v
}

// GetJWTTokenExpiry returns the JWTTokenExpiry field value
func (o *JWTAuthMechanism) GetJWTTokenExpiry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JWTTokenExpiry
}

// GetJWTTokenExpiryOk returns a tuple with the JWTTokenExpiry field value
// and a boolean to check if the value has been set.
func (o *JWTAuthMechanism) GetJWTTokenExpiryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JWTTokenExpiry, true
}

// SetJWTTokenExpiry sets field value
func (o *JWTAuthMechanism) SetJWTTokenExpiry(v string) {
	o.JWTTokenExpiry = v
}

func (o JWTAuthMechanism) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["JWTToken"] = o.JWTToken
	}
	if o.JWTTokenExpiresAt != nil {
		toSerialize["JWTTokenExpiresAt"] = o.JWTTokenExpiresAt
	}
	if true {
		toSerialize["JWTTokenExpiry"] = o.JWTTokenExpiry
	}
	return json.Marshal(toSerialize)
}

type NullableJWTAuthMechanism struct {
	value *JWTAuthMechanism
	isSet bool
}

func (v NullableJWTAuthMechanism) Get() *JWTAuthMechanism {
	return v.value
}

func (v *NullableJWTAuthMechanism) Set(val *JWTAuthMechanism) {
	v.value = val
	v.isSet = true
}

func (v NullableJWTAuthMechanism) IsSet() bool {
	return v.isSet
}

func (v *NullableJWTAuthMechanism) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJWTAuthMechanism(val *JWTAuthMechanism) *NullableJWTAuthMechanism {
	return &NullableJWTAuthMechanism{value: val, isSet: true}
}

func (v NullableJWTAuthMechanism) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJWTAuthMechanism) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
