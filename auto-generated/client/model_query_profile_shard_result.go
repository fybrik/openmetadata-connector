/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QueryProfileShardResult struct for QueryProfileShardResult
type QueryProfileShardResult struct {
	CollectorResult *CollectorResult `json:"collectorResult,omitempty"`
	Fragment        *bool            `json:"fragment,omitempty"`
	QueryResults    []ProfileResult  `json:"queryResults,omitempty"`
	RewriteTime     *int64           `json:"rewriteTime,omitempty"`
}

// NewQueryProfileShardResult instantiates a new QueryProfileShardResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryProfileShardResult() *QueryProfileShardResult {
	this := QueryProfileShardResult{}
	return &this
}

// NewQueryProfileShardResultWithDefaults instantiates a new QueryProfileShardResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryProfileShardResultWithDefaults() *QueryProfileShardResult {
	this := QueryProfileShardResult{}
	return &this
}

// GetCollectorResult returns the CollectorResult field value if set, zero value otherwise.
func (o *QueryProfileShardResult) GetCollectorResult() CollectorResult {
	if o == nil || o.CollectorResult == nil {
		var ret CollectorResult
		return ret
	}
	return *o.CollectorResult
}

// GetCollectorResultOk returns a tuple with the CollectorResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProfileShardResult) GetCollectorResultOk() (*CollectorResult, bool) {
	if o == nil || o.CollectorResult == nil {
		return nil, false
	}
	return o.CollectorResult, true
}

// HasCollectorResult returns a boolean if a field has been set.
func (o *QueryProfileShardResult) HasCollectorResult() bool {
	if o != nil && o.CollectorResult != nil {
		return true
	}

	return false
}

// SetCollectorResult gets a reference to the given CollectorResult and assigns it to the CollectorResult field.
func (o *QueryProfileShardResult) SetCollectorResult(v CollectorResult) {
	o.CollectorResult = &v
}

// GetFragment returns the Fragment field value if set, zero value otherwise.
func (o *QueryProfileShardResult) GetFragment() bool {
	if o == nil || o.Fragment == nil {
		var ret bool
		return ret
	}
	return *o.Fragment
}

// GetFragmentOk returns a tuple with the Fragment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProfileShardResult) GetFragmentOk() (*bool, bool) {
	if o == nil || o.Fragment == nil {
		return nil, false
	}
	return o.Fragment, true
}

// HasFragment returns a boolean if a field has been set.
func (o *QueryProfileShardResult) HasFragment() bool {
	if o != nil && o.Fragment != nil {
		return true
	}

	return false
}

// SetFragment gets a reference to the given bool and assigns it to the Fragment field.
func (o *QueryProfileShardResult) SetFragment(v bool) {
	o.Fragment = &v
}

// GetQueryResults returns the QueryResults field value if set, zero value otherwise.
func (o *QueryProfileShardResult) GetQueryResults() []ProfileResult {
	if o == nil || o.QueryResults == nil {
		var ret []ProfileResult
		return ret
	}
	return o.QueryResults
}

// GetQueryResultsOk returns a tuple with the QueryResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProfileShardResult) GetQueryResultsOk() ([]ProfileResult, bool) {
	if o == nil || o.QueryResults == nil {
		return nil, false
	}
	return o.QueryResults, true
}

// HasQueryResults returns a boolean if a field has been set.
func (o *QueryProfileShardResult) HasQueryResults() bool {
	if o != nil && o.QueryResults != nil {
		return true
	}

	return false
}

// SetQueryResults gets a reference to the given []ProfileResult and assigns it to the QueryResults field.
func (o *QueryProfileShardResult) SetQueryResults(v []ProfileResult) {
	o.QueryResults = v
}

// GetRewriteTime returns the RewriteTime field value if set, zero value otherwise.
func (o *QueryProfileShardResult) GetRewriteTime() int64 {
	if o == nil || o.RewriteTime == nil {
		var ret int64
		return ret
	}
	return *o.RewriteTime
}

// GetRewriteTimeOk returns a tuple with the RewriteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryProfileShardResult) GetRewriteTimeOk() (*int64, bool) {
	if o == nil || o.RewriteTime == nil {
		return nil, false
	}
	return o.RewriteTime, true
}

// HasRewriteTime returns a boolean if a field has been set.
func (o *QueryProfileShardResult) HasRewriteTime() bool {
	if o != nil && o.RewriteTime != nil {
		return true
	}

	return false
}

// SetRewriteTime gets a reference to the given int64 and assigns it to the RewriteTime field.
func (o *QueryProfileShardResult) SetRewriteTime(v int64) {
	o.RewriteTime = &v
}

func (o QueryProfileShardResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CollectorResult != nil {
		toSerialize["collectorResult"] = o.CollectorResult
	}
	if o.Fragment != nil {
		toSerialize["fragment"] = o.Fragment
	}
	if o.QueryResults != nil {
		toSerialize["queryResults"] = o.QueryResults
	}
	if o.RewriteTime != nil {
		toSerialize["rewriteTime"] = o.RewriteTime
	}
	return json.Marshal(toSerialize)
}

type NullableQueryProfileShardResult struct {
	value *QueryProfileShardResult
	isSet bool
}

func (v NullableQueryProfileShardResult) Get() *QueryProfileShardResult {
	return v.value
}

func (v *NullableQueryProfileShardResult) Set(val *QueryProfileShardResult) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryProfileShardResult) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryProfileShardResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryProfileShardResult(val *QueryProfileShardResult) *NullableQueryProfileShardResult {
	return &NullableQueryProfileShardResult{value: val, isSet: true}
}

func (v NullableQueryProfileShardResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryProfileShardResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
