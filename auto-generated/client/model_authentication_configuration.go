/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AuthenticationConfiguration struct for AuthenticationConfiguration
type AuthenticationConfiguration struct {
	Authority          *string  `json:"authority,omitempty"`
	CallbackUrl        *string  `json:"callbackUrl,omitempty"`
	ClientId           *string  `json:"clientId,omitempty"`
	JwtPrincipalClaims []string `json:"jwtPrincipalClaims,omitempty"`
	Provider           *string  `json:"provider,omitempty"`
	ProviderName       *string  `json:"providerName,omitempty"`
	PublicKey          *string  `json:"publicKey,omitempty"`
	PublicKeyUrls      []string `json:"publicKeyUrls,omitempty"`
}

// NewAuthenticationConfiguration instantiates a new AuthenticationConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationConfiguration() *AuthenticationConfiguration {
	this := AuthenticationConfiguration{}
	return &this
}

// NewAuthenticationConfigurationWithDefaults instantiates a new AuthenticationConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationConfigurationWithDefaults() *AuthenticationConfiguration {
	this := AuthenticationConfiguration{}
	return &this
}

// GetAuthority returns the Authority field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetAuthority() string {
	if o == nil || o.Authority == nil {
		var ret string
		return ret
	}
	return *o.Authority
}

// GetAuthorityOk returns a tuple with the Authority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetAuthorityOk() (*string, bool) {
	if o == nil || o.Authority == nil {
		return nil, false
	}
	return o.Authority, true
}

// HasAuthority returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasAuthority() bool {
	if o != nil && o.Authority != nil {
		return true
	}

	return false
}

// SetAuthority gets a reference to the given string and assigns it to the Authority field.
func (o *AuthenticationConfiguration) SetAuthority(v string) {
	o.Authority = &v
}

// GetCallbackUrl returns the CallbackUrl field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetCallbackUrl() string {
	if o == nil || o.CallbackUrl == nil {
		var ret string
		return ret
	}
	return *o.CallbackUrl
}

// GetCallbackUrlOk returns a tuple with the CallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetCallbackUrlOk() (*string, bool) {
	if o == nil || o.CallbackUrl == nil {
		return nil, false
	}
	return o.CallbackUrl, true
}

// HasCallbackUrl returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasCallbackUrl() bool {
	if o != nil && o.CallbackUrl != nil {
		return true
	}

	return false
}

// SetCallbackUrl gets a reference to the given string and assigns it to the CallbackUrl field.
func (o *AuthenticationConfiguration) SetCallbackUrl(v string) {
	o.CallbackUrl = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AuthenticationConfiguration) SetClientId(v string) {
	o.ClientId = &v
}

// GetJwtPrincipalClaims returns the JwtPrincipalClaims field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetJwtPrincipalClaims() []string {
	if o == nil || o.JwtPrincipalClaims == nil {
		var ret []string
		return ret
	}
	return o.JwtPrincipalClaims
}

// GetJwtPrincipalClaimsOk returns a tuple with the JwtPrincipalClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetJwtPrincipalClaimsOk() ([]string, bool) {
	if o == nil || o.JwtPrincipalClaims == nil {
		return nil, false
	}
	return o.JwtPrincipalClaims, true
}

// HasJwtPrincipalClaims returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasJwtPrincipalClaims() bool {
	if o != nil && o.JwtPrincipalClaims != nil {
		return true
	}

	return false
}

// SetJwtPrincipalClaims gets a reference to the given []string and assigns it to the JwtPrincipalClaims field.
func (o *AuthenticationConfiguration) SetJwtPrincipalClaims(v []string) {
	o.JwtPrincipalClaims = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *AuthenticationConfiguration) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetProviderName() string {
	if o == nil || o.ProviderName == nil {
		var ret string
		return ret
	}
	return *o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetProviderNameOk() (*string, bool) {
	if o == nil || o.ProviderName == nil {
		return nil, false
	}
	return o.ProviderName, true
}

// HasProviderName returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasProviderName() bool {
	if o != nil && o.ProviderName != nil {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given string and assigns it to the ProviderName field.
func (o *AuthenticationConfiguration) SetProviderName(v string) {
	o.ProviderName = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *AuthenticationConfiguration) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetPublicKeyUrls returns the PublicKeyUrls field value if set, zero value otherwise.
func (o *AuthenticationConfiguration) GetPublicKeyUrls() []string {
	if o == nil || o.PublicKeyUrls == nil {
		var ret []string
		return ret
	}
	return o.PublicKeyUrls
}

// GetPublicKeyUrlsOk returns a tuple with the PublicKeyUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationConfiguration) GetPublicKeyUrlsOk() ([]string, bool) {
	if o == nil || o.PublicKeyUrls == nil {
		return nil, false
	}
	return o.PublicKeyUrls, true
}

// HasPublicKeyUrls returns a boolean if a field has been set.
func (o *AuthenticationConfiguration) HasPublicKeyUrls() bool {
	if o != nil && o.PublicKeyUrls != nil {
		return true
	}

	return false
}

// SetPublicKeyUrls gets a reference to the given []string and assigns it to the PublicKeyUrls field.
func (o *AuthenticationConfiguration) SetPublicKeyUrls(v []string) {
	o.PublicKeyUrls = v
}

func (o AuthenticationConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Authority != nil {
		toSerialize["authority"] = o.Authority
	}
	if o.CallbackUrl != nil {
		toSerialize["callbackUrl"] = o.CallbackUrl
	}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.JwtPrincipalClaims != nil {
		toSerialize["jwtPrincipalClaims"] = o.JwtPrincipalClaims
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.ProviderName != nil {
		toSerialize["providerName"] = o.ProviderName
	}
	if o.PublicKey != nil {
		toSerialize["publicKey"] = o.PublicKey
	}
	if o.PublicKeyUrls != nil {
		toSerialize["publicKeyUrls"] = o.PublicKeyUrls
	}
	return json.Marshal(toSerialize)
}

type NullableAuthenticationConfiguration struct {
	value *AuthenticationConfiguration
	isSet bool
}

func (v NullableAuthenticationConfiguration) Get() *AuthenticationConfiguration {
	return v.value
}

func (v *NullableAuthenticationConfiguration) Set(val *AuthenticationConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationConfiguration(val *AuthenticationConfiguration) *NullableAuthenticationConfiguration {
	return &NullableAuthenticationConfiguration{value: val, isSet: true}
}

func (v NullableAuthenticationConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
