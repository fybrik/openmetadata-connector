/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MlModel struct for MlModel
type MlModel struct {
	Algorithm          string                 `json:"algorithm"`
	ChangeDescription  *ChangeDescription     `json:"changeDescription,omitempty"`
	Dashboard          *EntityReference       `json:"dashboard,omitempty"`
	Deleted            *bool                  `json:"deleted,omitempty"`
	Description        *string                `json:"description,omitempty"`
	DisplayName        *string                `json:"displayName,omitempty"`
	Extension          map[string]interface{} `json:"extension,omitempty"`
	Followers          []EntityReference      `json:"followers,omitempty"`
	FullyQualifiedName *string                `json:"fullyQualifiedName,omitempty"`
	Href               *string                `json:"href,omitempty"`
	Id                 string                 `json:"id"`
	MlFeatures         []MlFeature            `json:"mlFeatures,omitempty"`
	MlHyperParameters  []MlHyperParameter     `json:"mlHyperParameters,omitempty"`
	MlStore            *MlStore               `json:"mlStore,omitempty"`
	Name               string                 `json:"name"`
	Owner              *EntityReference       `json:"owner,omitempty"`
	Server             *string                `json:"server,omitempty"`
	Service            EntityReference        `json:"service"`
	ServiceType        *string                `json:"serviceType,omitempty"`
	Tags               []TagLabel             `json:"tags,omitempty"`
	Target             *string                `json:"target,omitempty"`
	UpdatedAt          *int64                 `json:"updatedAt,omitempty"`
	UpdatedBy          *string                `json:"updatedBy,omitempty"`
	UsageSummary       *UsageDetails          `json:"usageSummary,omitempty"`
	Version            *float64               `json:"version,omitempty"`
}

// NewMlModel instantiates a new MlModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMlModel(algorithm string, id string, name string, service EntityReference) *MlModel {
	this := MlModel{}
	this.Algorithm = algorithm
	this.Id = id
	this.Name = name
	this.Service = service
	return &this
}

// NewMlModelWithDefaults instantiates a new MlModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMlModelWithDefaults() *MlModel {
	this := MlModel{}
	return &this
}

// GetAlgorithm returns the Algorithm field value
func (o *MlModel) GetAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value
// and a boolean to check if the value has been set.
func (o *MlModel) GetAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Algorithm, true
}

// SetAlgorithm sets field value
func (o *MlModel) SetAlgorithm(v string) {
	o.Algorithm = v
}

// GetChangeDescription returns the ChangeDescription field value if set, zero value otherwise.
func (o *MlModel) GetChangeDescription() ChangeDescription {
	if o == nil || o.ChangeDescription == nil {
		var ret ChangeDescription
		return ret
	}
	return *o.ChangeDescription
}

// GetChangeDescriptionOk returns a tuple with the ChangeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetChangeDescriptionOk() (*ChangeDescription, bool) {
	if o == nil || o.ChangeDescription == nil {
		return nil, false
	}
	return o.ChangeDescription, true
}

// HasChangeDescription returns a boolean if a field has been set.
func (o *MlModel) HasChangeDescription() bool {
	if o != nil && o.ChangeDescription != nil {
		return true
	}

	return false
}

// SetChangeDescription gets a reference to the given ChangeDescription and assigns it to the ChangeDescription field.
func (o *MlModel) SetChangeDescription(v ChangeDescription) {
	o.ChangeDescription = &v
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *MlModel) GetDashboard() EntityReference {
	if o == nil || o.Dashboard == nil {
		var ret EntityReference
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetDashboardOk() (*EntityReference, bool) {
	if o == nil || o.Dashboard == nil {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *MlModel) HasDashboard() bool {
	if o != nil && o.Dashboard != nil {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given EntityReference and assigns it to the Dashboard field.
func (o *MlModel) SetDashboard(v EntityReference) {
	o.Dashboard = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *MlModel) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *MlModel) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *MlModel) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MlModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MlModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MlModel) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MlModel) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MlModel) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MlModel) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *MlModel) GetExtension() map[string]interface{} {
	if o == nil || o.Extension == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetExtensionOk() (map[string]interface{}, bool) {
	if o == nil || o.Extension == nil {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *MlModel) HasExtension() bool {
	if o != nil && o.Extension != nil {
		return true
	}

	return false
}

// SetExtension gets a reference to the given map[string]interface{} and assigns it to the Extension field.
func (o *MlModel) SetExtension(v map[string]interface{}) {
	o.Extension = v
}

// GetFollowers returns the Followers field value if set, zero value otherwise.
func (o *MlModel) GetFollowers() []EntityReference {
	if o == nil || o.Followers == nil {
		var ret []EntityReference
		return ret
	}
	return o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetFollowersOk() ([]EntityReference, bool) {
	if o == nil || o.Followers == nil {
		return nil, false
	}
	return o.Followers, true
}

// HasFollowers returns a boolean if a field has been set.
func (o *MlModel) HasFollowers() bool {
	if o != nil && o.Followers != nil {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given []EntityReference and assigns it to the Followers field.
func (o *MlModel) SetFollowers(v []EntityReference) {
	o.Followers = v
}

// GetFullyQualifiedName returns the FullyQualifiedName field value if set, zero value otherwise.
func (o *MlModel) GetFullyQualifiedName() string {
	if o == nil || o.FullyQualifiedName == nil {
		var ret string
		return ret
	}
	return *o.FullyQualifiedName
}

// GetFullyQualifiedNameOk returns a tuple with the FullyQualifiedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetFullyQualifiedNameOk() (*string, bool) {
	if o == nil || o.FullyQualifiedName == nil {
		return nil, false
	}
	return o.FullyQualifiedName, true
}

// HasFullyQualifiedName returns a boolean if a field has been set.
func (o *MlModel) HasFullyQualifiedName() bool {
	if o != nil && o.FullyQualifiedName != nil {
		return true
	}

	return false
}

// SetFullyQualifiedName gets a reference to the given string and assigns it to the FullyQualifiedName field.
func (o *MlModel) SetFullyQualifiedName(v string) {
	o.FullyQualifiedName = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *MlModel) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *MlModel) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *MlModel) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value
func (o *MlModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MlModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MlModel) SetId(v string) {
	o.Id = v
}

// GetMlFeatures returns the MlFeatures field value if set, zero value otherwise.
func (o *MlModel) GetMlFeatures() []MlFeature {
	if o == nil || o.MlFeatures == nil {
		var ret []MlFeature
		return ret
	}
	return o.MlFeatures
}

// GetMlFeaturesOk returns a tuple with the MlFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetMlFeaturesOk() ([]MlFeature, bool) {
	if o == nil || o.MlFeatures == nil {
		return nil, false
	}
	return o.MlFeatures, true
}

// HasMlFeatures returns a boolean if a field has been set.
func (o *MlModel) HasMlFeatures() bool {
	if o != nil && o.MlFeatures != nil {
		return true
	}

	return false
}

// SetMlFeatures gets a reference to the given []MlFeature and assigns it to the MlFeatures field.
func (o *MlModel) SetMlFeatures(v []MlFeature) {
	o.MlFeatures = v
}

// GetMlHyperParameters returns the MlHyperParameters field value if set, zero value otherwise.
func (o *MlModel) GetMlHyperParameters() []MlHyperParameter {
	if o == nil || o.MlHyperParameters == nil {
		var ret []MlHyperParameter
		return ret
	}
	return o.MlHyperParameters
}

// GetMlHyperParametersOk returns a tuple with the MlHyperParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetMlHyperParametersOk() ([]MlHyperParameter, bool) {
	if o == nil || o.MlHyperParameters == nil {
		return nil, false
	}
	return o.MlHyperParameters, true
}

// HasMlHyperParameters returns a boolean if a field has been set.
func (o *MlModel) HasMlHyperParameters() bool {
	if o != nil && o.MlHyperParameters != nil {
		return true
	}

	return false
}

// SetMlHyperParameters gets a reference to the given []MlHyperParameter and assigns it to the MlHyperParameters field.
func (o *MlModel) SetMlHyperParameters(v []MlHyperParameter) {
	o.MlHyperParameters = v
}

// GetMlStore returns the MlStore field value if set, zero value otherwise.
func (o *MlModel) GetMlStore() MlStore {
	if o == nil || o.MlStore == nil {
		var ret MlStore
		return ret
	}
	return *o.MlStore
}

// GetMlStoreOk returns a tuple with the MlStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetMlStoreOk() (*MlStore, bool) {
	if o == nil || o.MlStore == nil {
		return nil, false
	}
	return o.MlStore, true
}

// HasMlStore returns a boolean if a field has been set.
func (o *MlModel) HasMlStore() bool {
	if o != nil && o.MlStore != nil {
		return true
	}

	return false
}

// SetMlStore gets a reference to the given MlStore and assigns it to the MlStore field.
func (o *MlModel) SetMlStore(v MlStore) {
	o.MlStore = &v
}

// GetName returns the Name field value
func (o *MlModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MlModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MlModel) SetName(v string) {
	o.Name = v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *MlModel) GetOwner() EntityReference {
	if o == nil || o.Owner == nil {
		var ret EntityReference
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetOwnerOk() (*EntityReference, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *MlModel) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given EntityReference and assigns it to the Owner field.
func (o *MlModel) SetOwner(v EntityReference) {
	o.Owner = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *MlModel) GetServer() string {
	if o == nil || o.Server == nil {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetServerOk() (*string, bool) {
	if o == nil || o.Server == nil {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *MlModel) HasServer() bool {
	if o != nil && o.Server != nil {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *MlModel) SetServer(v string) {
	o.Server = &v
}

// GetService returns the Service field value
func (o *MlModel) GetService() EntityReference {
	if o == nil {
		var ret EntityReference
		return ret
	}

	return o.Service
}

// GetServiceOk returns a tuple with the Service field value
// and a boolean to check if the value has been set.
func (o *MlModel) GetServiceOk() (*EntityReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Service, true
}

// SetService sets field value
func (o *MlModel) SetService(v EntityReference) {
	o.Service = v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *MlModel) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *MlModel) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *MlModel) SetServiceType(v string) {
	o.ServiceType = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MlModel) GetTags() []TagLabel {
	if o == nil || o.Tags == nil {
		var ret []TagLabel
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetTagsOk() ([]TagLabel, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MlModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagLabel and assigns it to the Tags field.
func (o *MlModel) SetTags(v []TagLabel) {
	o.Tags = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *MlModel) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *MlModel) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *MlModel) SetTarget(v string) {
	o.Target = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MlModel) GetUpdatedAt() int64 {
	if o == nil || o.UpdatedAt == nil {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MlModel) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *MlModel) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *MlModel) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetUpdatedByOk() (*string, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *MlModel) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *MlModel) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetUsageSummary returns the UsageSummary field value if set, zero value otherwise.
func (o *MlModel) GetUsageSummary() UsageDetails {
	if o == nil || o.UsageSummary == nil {
		var ret UsageDetails
		return ret
	}
	return *o.UsageSummary
}

// GetUsageSummaryOk returns a tuple with the UsageSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetUsageSummaryOk() (*UsageDetails, bool) {
	if o == nil || o.UsageSummary == nil {
		return nil, false
	}
	return o.UsageSummary, true
}

// HasUsageSummary returns a boolean if a field has been set.
func (o *MlModel) HasUsageSummary() bool {
	if o != nil && o.UsageSummary != nil {
		return true
	}

	return false
}

// SetUsageSummary gets a reference to the given UsageDetails and assigns it to the UsageSummary field.
func (o *MlModel) SetUsageSummary(v UsageDetails) {
	o.UsageSummary = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MlModel) GetVersion() float64 {
	if o == nil || o.Version == nil {
		var ret float64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MlModel) GetVersionOk() (*float64, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MlModel) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given float64 and assigns it to the Version field.
func (o *MlModel) SetVersion(v float64) {
	o.Version = &v
}

func (o MlModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["algorithm"] = o.Algorithm
	}
	if o.ChangeDescription != nil {
		toSerialize["changeDescription"] = o.ChangeDescription
	}
	if o.Dashboard != nil {
		toSerialize["dashboard"] = o.Dashboard
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Extension != nil {
		toSerialize["extension"] = o.Extension
	}
	if o.Followers != nil {
		toSerialize["followers"] = o.Followers
	}
	if o.FullyQualifiedName != nil {
		toSerialize["fullyQualifiedName"] = o.FullyQualifiedName
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.MlFeatures != nil {
		toSerialize["mlFeatures"] = o.MlFeatures
	}
	if o.MlHyperParameters != nil {
		toSerialize["mlHyperParameters"] = o.MlHyperParameters
	}
	if o.MlStore != nil {
		toSerialize["mlStore"] = o.MlStore
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Server != nil {
		toSerialize["server"] = o.Server
	}
	if true {
		toSerialize["service"] = o.Service
	}
	if o.ServiceType != nil {
		toSerialize["serviceType"] = o.ServiceType
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if o.UsageSummary != nil {
		toSerialize["usageSummary"] = o.UsageSummary
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableMlModel struct {
	value *MlModel
	isSet bool
}

func (v NullableMlModel) Get() *MlModel {
	return v.value
}

func (v *NullableMlModel) Set(val *MlModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMlModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMlModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMlModel(val *MlModel) *NullableMlModel {
	return &NullableMlModel{value: val, isSet: true}
}

func (v NullableMlModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMlModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
