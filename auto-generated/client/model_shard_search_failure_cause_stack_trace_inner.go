/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ShardSearchFailureCauseStackTraceInner struct for ShardSearchFailureCauseStackTraceInner
type ShardSearchFailureCauseStackTraceInner struct {
	ClassLoaderName *string `json:"classLoaderName,omitempty"`
	ModuleName      *string `json:"moduleName,omitempty"`
	ModuleVersion   *string `json:"moduleVersion,omitempty"`
	MethodName      *string `json:"methodName,omitempty"`
	FileName        *string `json:"fileName,omitempty"`
	LineNumber      *int32  `json:"lineNumber,omitempty"`
	NativeMethod    *bool   `json:"nativeMethod,omitempty"`
	ClassName       *string `json:"className,omitempty"`
}

// NewShardSearchFailureCauseStackTraceInner instantiates a new ShardSearchFailureCauseStackTraceInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShardSearchFailureCauseStackTraceInner() *ShardSearchFailureCauseStackTraceInner {
	this := ShardSearchFailureCauseStackTraceInner{}
	return &this
}

// NewShardSearchFailureCauseStackTraceInnerWithDefaults instantiates a new ShardSearchFailureCauseStackTraceInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShardSearchFailureCauseStackTraceInnerWithDefaults() *ShardSearchFailureCauseStackTraceInner {
	this := ShardSearchFailureCauseStackTraceInner{}
	return &this
}

// GetClassLoaderName returns the ClassLoaderName field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetClassLoaderName() string {
	if o == nil || o.ClassLoaderName == nil {
		var ret string
		return ret
	}
	return *o.ClassLoaderName
}

// GetClassLoaderNameOk returns a tuple with the ClassLoaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetClassLoaderNameOk() (*string, bool) {
	if o == nil || o.ClassLoaderName == nil {
		return nil, false
	}
	return o.ClassLoaderName, true
}

// HasClassLoaderName returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasClassLoaderName() bool {
	if o != nil && o.ClassLoaderName != nil {
		return true
	}

	return false
}

// SetClassLoaderName gets a reference to the given string and assigns it to the ClassLoaderName field.
func (o *ShardSearchFailureCauseStackTraceInner) SetClassLoaderName(v string) {
	o.ClassLoaderName = &v
}

// GetModuleName returns the ModuleName field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetModuleName() string {
	if o == nil || o.ModuleName == nil {
		var ret string
		return ret
	}
	return *o.ModuleName
}

// GetModuleNameOk returns a tuple with the ModuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetModuleNameOk() (*string, bool) {
	if o == nil || o.ModuleName == nil {
		return nil, false
	}
	return o.ModuleName, true
}

// HasModuleName returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasModuleName() bool {
	if o != nil && o.ModuleName != nil {
		return true
	}

	return false
}

// SetModuleName gets a reference to the given string and assigns it to the ModuleName field.
func (o *ShardSearchFailureCauseStackTraceInner) SetModuleName(v string) {
	o.ModuleName = &v
}

// GetModuleVersion returns the ModuleVersion field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetModuleVersion() string {
	if o == nil || o.ModuleVersion == nil {
		var ret string
		return ret
	}
	return *o.ModuleVersion
}

// GetModuleVersionOk returns a tuple with the ModuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetModuleVersionOk() (*string, bool) {
	if o == nil || o.ModuleVersion == nil {
		return nil, false
	}
	return o.ModuleVersion, true
}

// HasModuleVersion returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasModuleVersion() bool {
	if o != nil && o.ModuleVersion != nil {
		return true
	}

	return false
}

// SetModuleVersion gets a reference to the given string and assigns it to the ModuleVersion field.
func (o *ShardSearchFailureCauseStackTraceInner) SetModuleVersion(v string) {
	o.ModuleVersion = &v
}

// GetMethodName returns the MethodName field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetMethodName() string {
	if o == nil || o.MethodName == nil {
		var ret string
		return ret
	}
	return *o.MethodName
}

// GetMethodNameOk returns a tuple with the MethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetMethodNameOk() (*string, bool) {
	if o == nil || o.MethodName == nil {
		return nil, false
	}
	return o.MethodName, true
}

// HasMethodName returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasMethodName() bool {
	if o != nil && o.MethodName != nil {
		return true
	}

	return false
}

// SetMethodName gets a reference to the given string and assigns it to the MethodName field.
func (o *ShardSearchFailureCauseStackTraceInner) SetMethodName(v string) {
	o.MethodName = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ShardSearchFailureCauseStackTraceInner) SetFileName(v string) {
	o.FileName = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetLineNumber() int32 {
	if o == nil || o.LineNumber == nil {
		var ret int32
		return ret
	}
	return *o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetLineNumberOk() (*int32, bool) {
	if o == nil || o.LineNumber == nil {
		return nil, false
	}
	return o.LineNumber, true
}

// HasLineNumber returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasLineNumber() bool {
	if o != nil && o.LineNumber != nil {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given int32 and assigns it to the LineNumber field.
func (o *ShardSearchFailureCauseStackTraceInner) SetLineNumber(v int32) {
	o.LineNumber = &v
}

// GetNativeMethod returns the NativeMethod field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetNativeMethod() bool {
	if o == nil || o.NativeMethod == nil {
		var ret bool
		return ret
	}
	return *o.NativeMethod
}

// GetNativeMethodOk returns a tuple with the NativeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetNativeMethodOk() (*bool, bool) {
	if o == nil || o.NativeMethod == nil {
		return nil, false
	}
	return o.NativeMethod, true
}

// HasNativeMethod returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasNativeMethod() bool {
	if o != nil && o.NativeMethod != nil {
		return true
	}

	return false
}

// SetNativeMethod gets a reference to the given bool and assigns it to the NativeMethod field.
func (o *ShardSearchFailureCauseStackTraceInner) SetNativeMethod(v bool) {
	o.NativeMethod = &v
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *ShardSearchFailureCauseStackTraceInner) GetClassName() string {
	if o == nil || o.ClassName == nil {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCauseStackTraceInner) GetClassNameOk() (*string, bool) {
	if o == nil || o.ClassName == nil {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *ShardSearchFailureCauseStackTraceInner) HasClassName() bool {
	if o != nil && o.ClassName != nil {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *ShardSearchFailureCauseStackTraceInner) SetClassName(v string) {
	o.ClassName = &v
}

func (o ShardSearchFailureCauseStackTraceInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClassLoaderName != nil {
		toSerialize["classLoaderName"] = o.ClassLoaderName
	}
	if o.ModuleName != nil {
		toSerialize["moduleName"] = o.ModuleName
	}
	if o.ModuleVersion != nil {
		toSerialize["moduleVersion"] = o.ModuleVersion
	}
	if o.MethodName != nil {
		toSerialize["methodName"] = o.MethodName
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.LineNumber != nil {
		toSerialize["lineNumber"] = o.LineNumber
	}
	if o.NativeMethod != nil {
		toSerialize["nativeMethod"] = o.NativeMethod
	}
	if o.ClassName != nil {
		toSerialize["className"] = o.ClassName
	}
	return json.Marshal(toSerialize)
}

type NullableShardSearchFailureCauseStackTraceInner struct {
	value *ShardSearchFailureCauseStackTraceInner
	isSet bool
}

func (v NullableShardSearchFailureCauseStackTraceInner) Get() *ShardSearchFailureCauseStackTraceInner {
	return v.value
}

func (v *NullableShardSearchFailureCauseStackTraceInner) Set(val *ShardSearchFailureCauseStackTraceInner) {
	v.value = val
	v.isSet = true
}

func (v NullableShardSearchFailureCauseStackTraceInner) IsSet() bool {
	return v.isSet
}

func (v *NullableShardSearchFailureCauseStackTraceInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShardSearchFailureCauseStackTraceInner(val *ShardSearchFailureCauseStackTraceInner) *NullableShardSearchFailureCauseStackTraceInner {
	return &NullableShardSearchFailureCauseStackTraceInner{value: val, isSet: true}
}

func (v NullableShardSearchFailureCauseStackTraceInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShardSearchFailureCauseStackTraceInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
