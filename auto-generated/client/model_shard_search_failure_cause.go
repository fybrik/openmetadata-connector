/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ShardSearchFailureCause struct for ShardSearchFailureCause
type ShardSearchFailureCause struct {
	LocalizedMessage *string                                  `json:"localizedMessage,omitempty"`
	Message          *string                                  `json:"message,omitempty"`
	StackTrace       []ShardSearchFailureCauseStackTraceInner `json:"stackTrace,omitempty"`
	Suppressed       []ShardSearchFailureCauseSuppressedInner `json:"suppressed,omitempty"`
}

// NewShardSearchFailureCause instantiates a new ShardSearchFailureCause object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShardSearchFailureCause() *ShardSearchFailureCause {
	this := ShardSearchFailureCause{}
	return &this
}

// NewShardSearchFailureCauseWithDefaults instantiates a new ShardSearchFailureCause object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShardSearchFailureCauseWithDefaults() *ShardSearchFailureCause {
	this := ShardSearchFailureCause{}
	return &this
}

// GetLocalizedMessage returns the LocalizedMessage field value if set, zero value otherwise.
func (o *ShardSearchFailureCause) GetLocalizedMessage() string {
	if o == nil || o.LocalizedMessage == nil {
		var ret string
		return ret
	}
	return *o.LocalizedMessage
}

// GetLocalizedMessageOk returns a tuple with the LocalizedMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCause) GetLocalizedMessageOk() (*string, bool) {
	if o == nil || o.LocalizedMessage == nil {
		return nil, false
	}
	return o.LocalizedMessage, true
}

// HasLocalizedMessage returns a boolean if a field has been set.
func (o *ShardSearchFailureCause) HasLocalizedMessage() bool {
	if o != nil && o.LocalizedMessage != nil {
		return true
	}

	return false
}

// SetLocalizedMessage gets a reference to the given string and assigns it to the LocalizedMessage field.
func (o *ShardSearchFailureCause) SetLocalizedMessage(v string) {
	o.LocalizedMessage = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ShardSearchFailureCause) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCause) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ShardSearchFailureCause) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ShardSearchFailureCause) SetMessage(v string) {
	o.Message = &v
}

// GetStackTrace returns the StackTrace field value if set, zero value otherwise.
func (o *ShardSearchFailureCause) GetStackTrace() []ShardSearchFailureCauseStackTraceInner {
	if o == nil || o.StackTrace == nil {
		var ret []ShardSearchFailureCauseStackTraceInner
		return ret
	}
	return o.StackTrace
}

// GetStackTraceOk returns a tuple with the StackTrace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCause) GetStackTraceOk() ([]ShardSearchFailureCauseStackTraceInner, bool) {
	if o == nil || o.StackTrace == nil {
		return nil, false
	}
	return o.StackTrace, true
}

// HasStackTrace returns a boolean if a field has been set.
func (o *ShardSearchFailureCause) HasStackTrace() bool {
	if o != nil && o.StackTrace != nil {
		return true
	}

	return false
}

// SetStackTrace gets a reference to the given []ShardSearchFailureCauseStackTraceInner and assigns it to the StackTrace field.
func (o *ShardSearchFailureCause) SetStackTrace(v []ShardSearchFailureCauseStackTraceInner) {
	o.StackTrace = v
}

// GetSuppressed returns the Suppressed field value if set, zero value otherwise.
func (o *ShardSearchFailureCause) GetSuppressed() []ShardSearchFailureCauseSuppressedInner {
	if o == nil || o.Suppressed == nil {
		var ret []ShardSearchFailureCauseSuppressedInner
		return ret
	}
	return o.Suppressed
}

// GetSuppressedOk returns a tuple with the Suppressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShardSearchFailureCause) GetSuppressedOk() ([]ShardSearchFailureCauseSuppressedInner, bool) {
	if o == nil || o.Suppressed == nil {
		return nil, false
	}
	return o.Suppressed, true
}

// HasSuppressed returns a boolean if a field has been set.
func (o *ShardSearchFailureCause) HasSuppressed() bool {
	if o != nil && o.Suppressed != nil {
		return true
	}

	return false
}

// SetSuppressed gets a reference to the given []ShardSearchFailureCauseSuppressedInner and assigns it to the Suppressed field.
func (o *ShardSearchFailureCause) SetSuppressed(v []ShardSearchFailureCauseSuppressedInner) {
	o.Suppressed = v
}

func (o ShardSearchFailureCause) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LocalizedMessage != nil {
		toSerialize["localizedMessage"] = o.LocalizedMessage
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.StackTrace != nil {
		toSerialize["stackTrace"] = o.StackTrace
	}
	if o.Suppressed != nil {
		toSerialize["suppressed"] = o.Suppressed
	}
	return json.Marshal(toSerialize)
}

type NullableShardSearchFailureCause struct {
	value *ShardSearchFailureCause
	isSet bool
}

func (v NullableShardSearchFailureCause) Get() *ShardSearchFailureCause {
	return v.value
}

func (v *NullableShardSearchFailureCause) Set(val *ShardSearchFailureCause) {
	v.value = val
	v.isSet = true
}

func (v NullableShardSearchFailureCause) IsSet() bool {
	return v.isSet
}

func (v *NullableShardSearchFailureCause) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShardSearchFailureCause(val *ShardSearchFailureCause) *NullableShardSearchFailureCause {
	return &NullableShardSearchFailureCause{value: val, isSet: true}
}

func (v NullableShardSearchFailureCause) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShardSearchFailureCause) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
