/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateTaskDetails struct for CreateTaskDetails
type CreateTaskDetails struct {
	Assignees  []EntityReference `json:"assignees"`
	OldValue   *string           `json:"oldValue,omitempty"`
	Suggestion *string           `json:"suggestion,omitempty"`
	Type       string            `json:"type"`
}

// NewCreateTaskDetails instantiates a new CreateTaskDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskDetails(assignees []EntityReference, type_ string) *CreateTaskDetails {
	this := CreateTaskDetails{}
	this.Assignees = assignees
	this.Type = type_
	return &this
}

// NewCreateTaskDetailsWithDefaults instantiates a new CreateTaskDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskDetailsWithDefaults() *CreateTaskDetails {
	this := CreateTaskDetails{}
	return &this
}

// GetAssignees returns the Assignees field value
func (o *CreateTaskDetails) GetAssignees() []EntityReference {
	if o == nil {
		var ret []EntityReference
		return ret
	}

	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value
// and a boolean to check if the value has been set.
func (o *CreateTaskDetails) GetAssigneesOk() ([]EntityReference, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assignees, true
}

// SetAssignees sets field value
func (o *CreateTaskDetails) SetAssignees(v []EntityReference) {
	o.Assignees = v
}

// GetOldValue returns the OldValue field value if set, zero value otherwise.
func (o *CreateTaskDetails) GetOldValue() string {
	if o == nil || o.OldValue == nil {
		var ret string
		return ret
	}
	return *o.OldValue
}

// GetOldValueOk returns a tuple with the OldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDetails) GetOldValueOk() (*string, bool) {
	if o == nil || o.OldValue == nil {
		return nil, false
	}
	return o.OldValue, true
}

// HasOldValue returns a boolean if a field has been set.
func (o *CreateTaskDetails) HasOldValue() bool {
	if o != nil && o.OldValue != nil {
		return true
	}

	return false
}

// SetOldValue gets a reference to the given string and assigns it to the OldValue field.
func (o *CreateTaskDetails) SetOldValue(v string) {
	o.OldValue = &v
}

// GetSuggestion returns the Suggestion field value if set, zero value otherwise.
func (o *CreateTaskDetails) GetSuggestion() string {
	if o == nil || o.Suggestion == nil {
		var ret string
		return ret
	}
	return *o.Suggestion
}

// GetSuggestionOk returns a tuple with the Suggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTaskDetails) GetSuggestionOk() (*string, bool) {
	if o == nil || o.Suggestion == nil {
		return nil, false
	}
	return o.Suggestion, true
}

// HasSuggestion returns a boolean if a field has been set.
func (o *CreateTaskDetails) HasSuggestion() bool {
	if o != nil && o.Suggestion != nil {
		return true
	}

	return false
}

// SetSuggestion gets a reference to the given string and assigns it to the Suggestion field.
func (o *CreateTaskDetails) SetSuggestion(v string) {
	o.Suggestion = &v
}

// GetType returns the Type field value
func (o *CreateTaskDetails) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateTaskDetails) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateTaskDetails) SetType(v string) {
	o.Type = v
}

func (o CreateTaskDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assignees"] = o.Assignees
	}
	if o.OldValue != nil {
		toSerialize["oldValue"] = o.OldValue
	}
	if o.Suggestion != nil {
		toSerialize["suggestion"] = o.Suggestion
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTaskDetails struct {
	value *CreateTaskDetails
	isSet bool
}

func (v NullableCreateTaskDetails) Get() *CreateTaskDetails {
	return v.value
}

func (v *NullableCreateTaskDetails) Set(val *CreateTaskDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskDetails(val *CreateTaskDetails) *NullableCreateTaskDetails {
	return &NullableCreateTaskDetails{value: val, isSet: true}
}

func (v NullableCreateTaskDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
