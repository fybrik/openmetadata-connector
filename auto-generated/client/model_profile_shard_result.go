/*
OpenMetadata Apis

# Overview  OpenMetadata supports REST APIs for getting metadata in and out of metadata store. The API resources are grouped under following categories: - **Data assets** - includes resources for data entities, such as `databases`, `tables`, and `topics`. Resources for data assets created from data, such as `dashboards`, `reports`, `metrics`, and `ML Features` are part of this collection. `pipelines`, `notebooks`, etc. that are used for creating data assets are also available as resources as of this collection. - **Teams and Users** - includes `users`, `teams`, a special type of user called `bots` that performs many automated tasks such as ingestion. - **Services** - are services that OpenMetadata integrates with. Currently `databaseService` is the only service under this collection that represents data sources. In the future, services related to Dashboards, Reports, ETL pipelines will be added under this collection. - **Glossary** - OpenMetadata supports hierarchical tags that can be used to build business vocabulary to describe and classify data available under `tags` resource.

API version: 0.11.0
Contact: openmetadata-dev@googlegroups.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProfileShardResult struct for ProfileShardResult
type ProfileShardResult struct {
	AggregationProfileResults *AggregationProfileShardResult `json:"aggregationProfileResults,omitempty"`
	QueryProfileResults       []QueryProfileShardResult      `json:"queryProfileResults,omitempty"`
}

// NewProfileShardResult instantiates a new ProfileShardResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfileShardResult() *ProfileShardResult {
	this := ProfileShardResult{}
	return &this
}

// NewProfileShardResultWithDefaults instantiates a new ProfileShardResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfileShardResultWithDefaults() *ProfileShardResult {
	this := ProfileShardResult{}
	return &this
}

// GetAggregationProfileResults returns the AggregationProfileResults field value if set, zero value otherwise.
func (o *ProfileShardResult) GetAggregationProfileResults() AggregationProfileShardResult {
	if o == nil || o.AggregationProfileResults == nil {
		var ret AggregationProfileShardResult
		return ret
	}
	return *o.AggregationProfileResults
}

// GetAggregationProfileResultsOk returns a tuple with the AggregationProfileResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileShardResult) GetAggregationProfileResultsOk() (*AggregationProfileShardResult, bool) {
	if o == nil || o.AggregationProfileResults == nil {
		return nil, false
	}
	return o.AggregationProfileResults, true
}

// HasAggregationProfileResults returns a boolean if a field has been set.
func (o *ProfileShardResult) HasAggregationProfileResults() bool {
	if o != nil && o.AggregationProfileResults != nil {
		return true
	}

	return false
}

// SetAggregationProfileResults gets a reference to the given AggregationProfileShardResult and assigns it to the AggregationProfileResults field.
func (o *ProfileShardResult) SetAggregationProfileResults(v AggregationProfileShardResult) {
	o.AggregationProfileResults = &v
}

// GetQueryProfileResults returns the QueryProfileResults field value if set, zero value otherwise.
func (o *ProfileShardResult) GetQueryProfileResults() []QueryProfileShardResult {
	if o == nil || o.QueryProfileResults == nil {
		var ret []QueryProfileShardResult
		return ret
	}
	return o.QueryProfileResults
}

// GetQueryProfileResultsOk returns a tuple with the QueryProfileResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfileShardResult) GetQueryProfileResultsOk() ([]QueryProfileShardResult, bool) {
	if o == nil || o.QueryProfileResults == nil {
		return nil, false
	}
	return o.QueryProfileResults, true
}

// HasQueryProfileResults returns a boolean if a field has been set.
func (o *ProfileShardResult) HasQueryProfileResults() bool {
	if o != nil && o.QueryProfileResults != nil {
		return true
	}

	return false
}

// SetQueryProfileResults gets a reference to the given []QueryProfileShardResult and assigns it to the QueryProfileResults field.
func (o *ProfileShardResult) SetQueryProfileResults(v []QueryProfileShardResult) {
	o.QueryProfileResults = v
}

func (o ProfileShardResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregationProfileResults != nil {
		toSerialize["aggregationProfileResults"] = o.AggregationProfileResults
	}
	if o.QueryProfileResults != nil {
		toSerialize["queryProfileResults"] = o.QueryProfileResults
	}
	return json.Marshal(toSerialize)
}

type NullableProfileShardResult struct {
	value *ProfileShardResult
	isSet bool
}

func (v NullableProfileShardResult) Get() *ProfileShardResult {
	return v.value
}

func (v *NullableProfileShardResult) Set(val *ProfileShardResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProfileShardResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProfileShardResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfileShardResult(val *ProfileShardResult) *NullableProfileShardResult {
	return &NullableProfileShardResult{value: val, isSet: true}
}

func (v NullableProfileShardResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfileShardResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
