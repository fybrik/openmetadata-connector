/*
Data Catalog Service - Asset Details

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteAssetResponse struct for DeleteAssetResponse
type DeleteAssetResponse struct {
	// The deletion status
	Status *string `json:"status,omitempty"`
}

// NewDeleteAssetResponse instantiates a new DeleteAssetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAssetResponse() *DeleteAssetResponse {
	this := DeleteAssetResponse{}
	return &this
}

// NewDeleteAssetResponseWithDefaults instantiates a new DeleteAssetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAssetResponseWithDefaults() *DeleteAssetResponse {
	this := DeleteAssetResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeleteAssetResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAssetResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeleteAssetResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeleteAssetResponse) SetStatus(v string) {
	o.Status = &v
}

func (o DeleteAssetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteAssetResponse struct {
	value *DeleteAssetResponse
	isSet bool
}

func (v NullableDeleteAssetResponse) Get() *DeleteAssetResponse {
	return v.value
}

func (v *NullableDeleteAssetResponse) Set(val *DeleteAssetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAssetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAssetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAssetResponse(val *DeleteAssetResponse) *NullableDeleteAssetResponse {
	return &NullableDeleteAssetResponse{value: val, isSet: true}
}

func (v NullableDeleteAssetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAssetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
