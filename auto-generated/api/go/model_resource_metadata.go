/*
 * Data Catalog Service - Asset Details
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// ResourceMetadata - ResourceMetadata defines model for resource metadata
type ResourceMetadata struct {

	// Columns associated with the asset
	Columns []ResourceColumn `json:"columns,omitempty"`

	// Geography of the resource
	Geography string `json:"geography,omitempty"`

	// Name of the resource
	Name string `json:"name,omitempty"`

	// Owner of the resource
	Owner string `json:"owner,omitempty"`

	Tags map[string]interface{} `json:"tags,omitempty"`
}

// AssertResourceMetadataRequired checks if the required fields are not zero-ed
func AssertResourceMetadataRequired(obj ResourceMetadata) error {
	for _, el := range obj.Columns {
		if err := AssertResourceColumnRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseResourceMetadataRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ResourceMetadata (e.g. [][]ResourceMetadata), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseResourceMetadataRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aResourceMetadata, ok := obj.(ResourceMetadata)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertResourceMetadataRequired(aResourceMetadata)
	})
}
